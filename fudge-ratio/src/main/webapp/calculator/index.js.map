{"version":3,"sources":["index.js"],"names":["button","document","getElementById","buttonClear","text","dropdown","textContent","seconds","minutes","hours","timer","task","duration","padd","num","addOneSecond","updateText","startTimer","setInterval","stopTimer","clearInterval","displayMessage","addEventListener","value","alert","saveSessionState","classList","toggle","click","cleanSessionState","formatTaskString","op","category","options","selectedIndex","parentNode","label","formattedString","innerHTML","timeKey","indexKey","informationThere","recoverSessionState","localStorage","setItem","Date","now","getItem","loadActivities","fetch","then","response","json","activities","forEach","activity","activityType","type","appendChild","createElement","act","optionElement","name","removeItem","array","every","x","timeStarted","start","parseInt","elapsed","Math","floor","current"],"mappings":"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","file":"index.js","sourceRoot":"../../../../frontend/code","sourcesContent":["const button = document.getElementById(\"startStopButton\");\nconst buttonClear = document.getElementById(\"clear\");\nconst text = document.getElementById(\"timer\");\nconst dropdown = document.getElementById(\"dropdown-contents\");\n\nbutton.textContent = \"Start\";\n\nlet seconds = 0,\n  minutes = 0,\n  hours = 0;\nlet timer = null;\nlet task = \"\";\nlet duration = \" PLACE HOLDER\"; //leaving this here for now because it might interfere with how Jerry wants to do things\n\n// Concatenates a zero to the beginning of a number less than 10.\nconst padd = num => (num < 10 ? \"0\" : \"\") + num;\n\nconst addOneSecond = () => {\n  seconds++;\n  if (seconds == 60) {\n    minutes++;\n    seconds = 0;\n  }\n  if (minutes == 60) {\n    hours = (hours + 1) % 24;\n    minutes = 0;\n  }\n};\n\n// Updates the timer text in index.html to increment every second, minute, and hour.\nconst updateText = () =>\n  (text.textContent = padd(hours) + \":\" + padd(minutes) + \":\" + padd(seconds));\n\n// When the start button is clicked, the timer variable is initialized to 1 every second.\nconst startTimer = () => {\n  if (timer) return;\n  timer = setInterval(() => {\n    addOneSecond();\n    updateText();\n  }, 1000);\n};\n\n// Stops the increment of hours, minutes, and seconds on the timer.\nconst stopTimer = () => {\n  clearInterval(timer);\n  timer = null;\n  displayMessage();\n};\n\nbutton.addEventListener(\"click\", () => {\n  if (button.textContent === \"Start\") {\n    if (dropdown.value == \"\") {\n      alert(\"You must pick a task before starting\");\n      return;\n    }\n    task = dropdown.value;\n    const minutesSince = startTimer();\n    saveSessionState();\n  } else {\n    stopTimer();\n  }\n  button.classList.toggle(\"stop\");\n  text.classList.toggle(\"stopped\");\n  button.textContent = button.textContent === \"Start\" ? \"Stop\" : \"Start\";\n});\n\nbuttonClear.addEventListener(\"click\", () => {\n  if (button.textContent === \"Stop\") button.click();\n  (seconds = 0), (minutes = 0), (hours = 0);\n  updateText();\n  cleanSessionState();\n});\n\nconst formatTaskString = () => {\n  let op = dropdown.options[dropdown.selectedIndex];\n  let category = op.parentNode.label;\n  let formattedString = \"\";\n  if (category == \"Schoolwork\") {\n    formattedString = task + \" homework!\";\n  } else if (category == \"Job-related tasks\") {\n    formattedString = \"doing \" + task + \"!\";\n  } else formattedString = task + \"!\";\n  return formattedString;\n};\nconst displayMessage = () => {\n  document.getElementById(\"finalMessage\").innerHTML =\n    \"Next time please allocate\" + duration + \" for \" + formatTaskString();\n};\n\n// Save state in local Store ====\nconst timeKey = \"startingTime\";\nconst indexKey = \"selectedIndex\";\n\nconst saveSessionState = () => {\n  if (informationThere(recoverSessionState())) return;\n  localStorage.setItem(timeKey, Date.now());\n  localStorage.setItem(indexKey, dropdown.selectedIndex);\n};\n\nconst recoverSessionState = () => {\n  return [localStorage.getItem(timeKey), localStorage.getItem(indexKey)];\n};\n\nfunction loadActivities() {\n    fetch('/data').then(response => response.json()).then((activities) => {\n        activities.forEach((activity) => {\n            let activityType = activity.type;\n            const activityListElement = document.getElementById(activityType);\n            activityListElement.appendChild(createElement(activity));\n        })\n    });\n}\n\nfunction createElement(act) {\n    const optionElement = document.createElement(\"OPTION\");\n    optionElement.text = act.name;\n    optionElement.label = act.name;\n    optionElement.value = act.name;\n    return optionElement;\n}\n\nconst cleanSessionState = () => {\n  localStorage.removeItem(timeKey);\n  localStorage.removeItem(indexKey);\n};\n\nconst informationThere = array => array.every(x => x != null);\n\nif (informationThere(recoverSessionState())) {\n  const [timeStarted, selectedIndex] = recoverSessionState();\n  const start = parseInt(timeStarted);\n  dropdown.selectedIndex = selectedIndex;\n\n  const now = Date.now();\n  const elapsed = Math.floor((now - start) / 1000);\n\n  seconds = elapsed % 60;\n  minutes = Math.floor(elapsed / 60) % 60;\n  hours = Math.floor(elapsed / 3600) % 24;\n  updateText();\n  button.click();\n}\n\ndropdown.addEventListener(\"change\", () => {\n  const current = recoverSessionState()[1];\n  if (current) dropdown.selectedIndex = current\n});\n"]}